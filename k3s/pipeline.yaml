kind: ConfigMap
apiVersion: v1
metadata:
  name: logstash-pipelines
  namespace: default
data:
  logstash.conf: |
    input {
      syslog {
        type => "syslog"
        port => 5044
      }
    }
    filter {
       grok {
        match => ["message", "%{SYSLOG5424PRI}%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:timestamp}|-) +(?:%{HOSTNAME:heroku_drain_id}|-) +(?:%{WORD:heroku_source}|-) +(?:%{DATA:heroku_dyno}|-) +(?:%{WORD:syslog5424_msgid}|-) +(?:%{SYSLOG5424SD:syslog5424_sd}|-|) +%{GREEDYDATA:heroku_message}"]
        }
        if [request_id] {
            aggregate {
                group_on => "request_id"
                id => "request_group"
                timeout => 5
                on_timeout => "emit_group"
                on_start => "emit_group"
                add_tag => ["aggregated"]
            }
        }
        mutate { rename => ["heroku_message", "message"] }
        kv { source => "message" }
        mutate { convert => ["sample#memory-free", "integer"]}
        mutate { convert => ["sample#memory-total", "integer"]}
        mutate { convert => ["sample#memory-redis", "integer"]}
        mutate { convert => ["sample#memory-cached", "integer"]}
        mutate { convert => ["sample#load-avg-5m", "float"]}
        mutate { convert => ["sample#load-avg-1m", "float"]}
        mutate { convert => ["sample#load-avg-15m", "float"]}
        syslog_pri { syslog_pri_field_name => "syslog5424_pri" }
    }
    output {
      if [heroku_source] == "heroku" and [heroku_dyno] == "router" {
        elasticsearch {
          hosts => "http://elasticsearch.default.svc.cluster.local:9200"
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          template_overwrite => false
          index => "router-%{+YYYY.MM.dd}"
        }
      }
      if [heroku_source] == "heroku" and [heroku_dyno] == "web.1" {
        elasticsearch {
          hosts => "http://elasticsearch.default.svc.cluster.local:9200"
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          template_overwrite => false
          index => "web-%{+YYYY.MM.dd}"
        }
      }
      if [heroku_source] == "app" and [heroku_dyno] == "web.1" {
        elasticsearch {
          hosts => "http://elasticsearch.default.svc.cluster.local:9200"
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          template_overwrite => false
          index => "app-%{+YYYY.MM.dd}"
        }
      }
      if "aggregated" in [tags] {
        elasticsearch {
          hosts => "http://elasticsearch.default.svc.cluster.local:9200"
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          template_overwrite => false
          index => "aggregate-%{+YYYY.MM.dd}"
        }
      }
      else {
        elasticsearch {
          hosts => "http://elasticsearch.default.svc.cluster.local:9200"
          user => "${ELASTICSEARCH_USERNAME}"
          password => "${ELASTICSEARCH_PASSWORD}"
          template_overwrite => false
          index => "heroku-drains-%{+YYYY.MM.dd}"
        }
      }
    }
